1) Task is a unit of work that takes a function
	> new Task(function) , t.Start()
	> Task.Factory.StartNew(function)

2) Tasks can be passed an object

3) Tasks can return values
	> new Task<T>, task.Result (this awaits for the task)

4) Tasks can report their state
	>task.IsCompleted, task.IsFaulted, ..

Cancellation 
right way with token.ThrowIfCancellationRequested(), throw -> OperrationCanceledException 
and the task.status == canceled

token.WaitHandle.WaitOne(mseconds)
SpinWait()


Waiting for several task
Task.WaitAll()
Task.WaitAny()

WaitAny/WaitAll() -> thows an exception if canceled

AggregateException